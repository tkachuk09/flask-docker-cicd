name: CI_CD_pipeline
env:
   EB_PACKAGE_S3_BUCKET_NAME : "sleepdeployrepeat"
   EB_APPLICATION_NAME       : "flask_app"
   EB_ENVIRONMENT_NAME       : "Flaskapp-env"
   DEPLOY_PACKAGE_NAME       : "flask_app.zip"
   AWS_REGION_NAME           : "eu-north-1"


on:
  push:
    branches:
      - main 

jobs:
  CI_part:
    runs-on: ubuntu-latest

    steps:
      - name: Clone our repository
        uses: actions/checkout@v1
      
      - name: Create ZIP deployment package
        run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git* 

      - name: Configure AWS authentication
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id     :   ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key :   ${{ secrets.AWS_SECRET_KEY }}
          aws-region            :   ${{ env.AWS_REGION_NAME }}
          
      - name: Copy deployment package to S3 bucket
        run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
      - name: Final message
        run : echo "CI part finished successfully"

  CD_part:
    runs-on: ubuntu-latest
    needs: [CI_part]

    steps:
    - name: Configure AWS authentication
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id     :   ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key :   ${{ secrets.AWS_SECRET_KEY }}
        aws-region            :   ${{ env.AWS_REGION_NAME }}
        
    - name: Create new ELB application
      run : |
        aws elasticbeanstalk create-application-version \
        --application name: ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}", S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
    - name: Deploy new ELB application version
      run: aws elacsticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
      
       
    - name: Final message
      run : echo "CD part finished successfully"
